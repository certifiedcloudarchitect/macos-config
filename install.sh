#!/usr/bin/env bash

USER_NAME="John Carey"
USER_EMAIL="certifiedcloudarchitect@gmail.com"
#-------------------------------------------------------------------------------------------------------------
# configure-macos
# parameters: [CONFIG_MACOS] true or false
# note: requires password to make system changes
#-------------------------------------------------------------------------------------------------------------
bash ./setup-scripts/configure-macos.sh

#-------------------------------------------------------------------------------------------------------------
# install-brew
# parameters: [INSTALL_BREW]
#-------------------------------------------------------------------------------------------------------------
bash ./setup-scripts/install-brew.sh

#-------------------------------------------------------------------------------------------------------------
# install-omz
# parameters: [INSTALL_OMZ]
#-------------------------------------------------------------------------------------------------------------
bash ./setup-scripts/install-omz.sh

#-------------------------------------------------------------------------------------------------------------
# configure-ssh
# parameters: [USER_EMAIL] [CONFIG_SSH]
# note: prompt for a new ssh password to generate the key
#-------------------------------------------------------------------------------------------------------------
bash ./setup-scripts/configure-ssh.sh "${USER_EMAIL}"

#-------------------------------------------------------------------------------------------------------------
# configure-gpg
# parameters: [USER_NAME] [USER_EMAIL] [CONFIG_GPG]
# note: prompt for a new gpg password to generate the key
#-------------------------------------------------------------------------------------------------------------
bash ./setup-scripts/configure-gpg.sh "${USER_NAME}" "${USER_EMAIL}"

#-------------------------------------------------------------------------------------------------------------
# configure-git
# parameters: [USER_NAME] [USER_EMAIL] [CONFIG_GIT]
#-------------------------------------------------------------------------------------------------------------
bash ./setup-scripts/configure-git.sh "${USER_NAME}" "${USER_EMAIL}"

#-------------------------------------------------------------------------------------------------------------
# install-awscli
# parameters: [INSTALL_AWS] true or false
#-------------------------------------------------------------------------------------------------------------
bash ./setup-scripts/install-awscli.sh

#-------------------------------------------------------------------------------------------------------------
# install-go 
# parameters: [INSTALL_GO] true or false
#-------------------------------------------------------------------------------------------------------------
bash ./setup-scripts/install-go.sh

#-------------------------------------------------------------------------------------------------------------
# install-java
# parameters: [INSTALL_JAVA] true or false
#-------------------------------------------------------------------------------------------------------------
bash ./setup-scripts/install-java.sh

#-------------------------------------------------------------------------------------------------------------
# install-kubectl
# parameters: [INSTALL_KUBECTL] true or false
#-------------------------------------------------------------------------------------------------------------
bash ./setup-scripts/install-kubectl.sh

#-------------------------------------------------------------------------------------------------------------
# install-node
# parameters: [INSTALL_NODE] true or false
#-------------------------------------------------------------------------------------------------------------
bash ./setup-scripts/install-node.sh

#-------------------------------------------------------------------------------------------------------------
# install-python
# parameters: [INSTALL_PYTHON] true or false
#-------------------------------------------------------------------------------------------------------------
bash ./setup-scripts/install-python.sh

#-------------------------------------------------------------------------------------------------------------
# install-ruby
# parameters: [INSTALL_RUBY] true or false
#-------------------------------------------------------------------------------------------------------------
bash ./setup-scripts/install-ruby.sh

#-------------------------------------------------------------------------------------------------------------
# install-rust
# parameters: [INSTALL_RUST] true or false
#-------------------------------------------------------------------------------------------------------------
bash ./setup-scripts/install-rust.sh

#-------------------------------------------------------------------------------------------------------------
# install-terraform
# parameters: [INSTALL_TERRAFORM] true or false
#-------------------------------------------------------------------------------------------------------------
bash ./setup-scripts/install-terraform.sh

#-------------------------------------------------------------------------------------------------------------
# print ssh
# https://docs.github.com/en/authentication/connecting-to-github-with-ssh/adding-a-new-ssh-key-to-your-github-account
#-------------------------------------------------------------------------------------------------------------
if [ -d "$HOME/.ssh" ]; then
    echo "  ____ ____  _   _   _              "
    echo " / ___/ ___|| | | | | | _____ _   _ "
    echo " \___ \___ \| |_| | | |/ / _ \ | | |"
    echo "  ___) |__) |  _  | |   <  __/ |_| |"
    echo " |____/____/|_| |_| |_|\_\___|\__, |"
    echo "                              |___/ "
    cat "$HOME"/.ssh/id_ed25519.pub

    echo "Print SSH key..Done!"
fi

#-------------------------------------------------------------------------------------------------------------
# print gpg
# https://docs.github.com/en/authentication/managing-commit-signature-verification/adding-a-new-gpg-key-to-your-github-account
#-------------------------------------------------------------------------------------------------------------
if [ -d "$HOME/.gnupg" ]; then
    echo "   ____ ____   ____   _              "
    echo "  / ___|  _ \ / ___| | | _____ _   _ "
    echo " | |  _| |_) | |  _  | |/ / _ \ | | |"
    echo " | |_| |  __/| |_| | |   <  __/ |_| |"
    echo "  \____|_|    \____| |_|\_\___|\__, |"
    echo "                               |___/ "
    gpg --armor --export "$(gpg --list-secret-keys --with-colons | awk -F: '$1 == "sec" {print $5}')"

    echo "Print GPG key...Done!"
fi
